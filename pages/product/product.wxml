<import src="../../templates/offer/payButton.wxml" />

<view class="container ziko-offer ziko-{{ (_setting.type == 'packProduct' ? 'product' : 'pack' ) }} {{ 'community-' + _setting.community }}">
  <view class="banner_container">
    <!-- Detail Banner -->
    <view class="banner-image_container swiper_container">
      <swiper class="swiper">
        <swiper-item class="swiper_item">
          <image class="swiper_item-image" src="{{ _folders.product_picture + product.product.mainPicture[_language].uri }}" mode="aspectFill" lazy-load="true" wx:if="{{ _setting.type != 'pack' }}"></image>
          <image class="swiper_item-image" src="{{ _folders.pack_picture + product.illustation.uri }}" mode="aspectFill" wx:elif="{{ product.illustation }}"></image>
          <image class="swiper_item-image" src="/assets/images/packDefault.png" mode="aspectFill" wx:else></image>
          <!-- <image class="swiper_item-image" src="{{ media ? media.uri : '' }}" mode="aspectFill" lazy-load="true"></image> -->
        </swiper-item>
      </swiper>
    </view>
    <!-- End of Detail Banner -->
  </view>

  <!-- Product Info -->
  <view class="flex-between flex-align-start product-info_container" mark:type="{{ _setting.type != 'product' ? 'packs' : 'items'}}">
    <view class="product-info">
      <view class="gilroy_700 uppercase{{ _setting.type != 'pack' ? ' gradient-text ziko-' + _setting.community : '' }} product-info_title">
        {{ _setting.type != 'pack' ? product.product.name[_language] : product.name[_language] }}
      </view>
      <view class="product-info_detail">
        <!-- Products Detail -->
        <view class="nunito_300 product-detail_content" wx:if="{{ _setting.type == 'pack' }}">
          <block wx:for="{{ product.weights }}" wx:key="total" wx:for-item="total">
            <text wx:if="{{ index > 0 }}"> + </text>
            <text>{{ total.weight + total.unit }}</text>
          </block>
          <text>{{ product.weight ? (product.weightType ? product.weight + product.weightType : product.weight + _t.general_unit) : '' }}</text>
        </view>
        <view class="nunito_300 product-detail_content" wx:else>
          <text>{{ product.product.storageType && product.product.storageType != 'none' ? '(' + _t.storage_types[product.product.storageType] + ') ' : '' }}</text>
          <text wx:if="{{ product.weight && product.weightType }}">{{ product.quantity ? product.quantity + ' x ' + product.weight + product.weightType : product.weight + product.weightType }}</text>
          <text wx:elif="{{ product.weight }}">{{ product.quantity ? product.quantity + ' x ' + product.weight + _t.units : product.weight + _t.units }}</text>
          <text wx:else>{{ product.quantity ? product.quantity > 1 ? product.quantity +  _t.items_unit : product.quantity + _t.item_unit : '' }}</text>
        </view>
        <!-- End of Products Detail -->

        <!-- Available Amount Left -->
        <view class="nunito_300 product-detail_content" wx:if="{{ _setting.type != 'packProduct' }}">
          <text wx:if="{{ product.actualStock == 0 }}">{{ _t.products_left.fst + product.actualStock + _t.products_left.snd }}</text>
          <text wx:elif="{{ product.actualStock >= 100 }}">{{ _t.available.fst + product.actualStock + _t.available.snd }}</text>
          <text wx:else>{{ _t.only_left.fst + product.actualStock + _t.only_left.snd }}</text>
        </view>
        <!-- End of Available Amount Left -->

        <!-- Price -->
        <view class="gilroy_800 product-price_container" wx:if="{{ _setting.type != 'packProduct' }}">
          <text class="product-price" wx:if="{{ cart.products[product._id].price && cart.products[product._id].price != product.price }}">¥{{ cart.products[product._id].price }}</text>
          <text class="product-price" wx:elif="{{ product.formerPrice && product.formerPrice != product.price }}">¥{{ product.price }}</text>
          <text class="product-price">¥{{ product.formerPrice ? product.formerPrice : product.price }}</text>
        </view>
        <!-- End of Price -->
      </view>
    </view>
    <block wx:if="{{ (_setting.type != 'packProduct') }}">
      <quantity
        amount="{{ cart.products[product._id].amount }}"
        community="{{ _setting.community }}"
        stock="{{ product.actualStock }}"
        bind:changeAmount="changeAmount"
        data-idx="{{ product_index }}"
        data-price="{{ product.price }}"
      ></quantity>
    </block>
  </view>
  <!-- quantity component if not type = 'product' and pack = false -->
  <!-- End of Product Info -->

  <!-- Product Detail if not type = 'product' (not using pack = false because need for quantity) -->
  <block wx:if="{{ _setting.type != 'pack' }}">
    <view class="nunito_300 product-descrtiption">
      <text>{{ product.product.description[_language] }}</text>
    </view>
  </block>
  <!-- End of Product Detail -->

  <!-- Pack Products -->
  <block wx:else>
    <view class="list_container pack-products">
      <!-- Pack Product List -->
      <view class="offer-group offer-packs">
        <view class="gilroy_700 uppercase title">{{ _t.contains_items }}</view>

        <view class="product_container" wx:for="{{ product.products }}" wx:for-item="product" wx:key="_id">
          <navigator class="flex-between flex-align-start product" url="{{ _routes.product + '?id=' + product._id + '&offer_id=' + _offer.id + '&type=packProduct' }}">
            <view class="flex-start flex-align-start product_left">
              <view class="product-image">
                <image src="{{ _folders.product_picture + product.product.mainPicture[_language].uri }}" mode="aspectFill" lazy-load="true"></image>
              </view>
              <view class="product-info">
                <view class="gilroy_700 ziko-{{ _setting.community }}-pure gradient-text uppercase product-title">
                  {{ product.product.name[_language] }}
                </view>

                <view class="nunito_300 product-detail_container">
                  <text>{{ product.product.storageType  && product.product.storageType != 'none' ? '(' + _t.storage_types[product.product.storageType] + ') ' : '' }}</text>
                  <text wx:if="{{ product.weight && product.weightType }}">{{ product.quantity ? product.quantity + ' x ' + product.weight + product.weightType : product.weight + product.weightType }}</text>
                  <text wx:elif="{{ product.weight }}">{{ product.quantity ? product.quantity + ' x ' + product.weight + _t.units : product.weight + _t.units }}</text>
                  <text wx:else>{{ product.quantity ? product.quantity > 1 ? product.quantity +  _t.items_unit : product.quantity + _t.item_unit : '' }}</text>
                </view>

                <view class="nunito_300 ellipsis_2 product-detail_container">
                  {{ product.product.description[_language] }}
                </view>
              </view>
            </view>

            <view class="flex-start product-navigate_container">
              <view class="product-navigate">{{ _t.discover }}</view>
            </view>
          </navigator>
        </view>
      </view>
      <!-- End of Pack Product List -->
    </view>
  </block>
  <!-- End of Pack Products -->

  <!-- Offer Recipes -->
  <view class="list_container product-recipe">
    <view class="offer-group recipe-group">
      <view class="uppercase title">
        <text class="gilroy_500">{{ _t.related_recipes.fst }}</text>
        <text class="gilroy_700">{{ _t.related_recipes.snd }}</text>
      </view>

      <view class="no-recipes" wx:if="{{ recipes.length == 0 }}">{{ _t.no_recipes }}</view>

      <recipes id="recipes-component" _t="{{ _t_recipes }}"></recipes>
    </view>
  </view>
  <!-- End of Offer Recipes -->

  <!-- Pay Button -->
  <view wx:if="{{ (_setting.type != 'packProduct') }}">
    <template is="payment_container" data="{{ _pay_set: _pay_set, _t: _t, user: user, wxUser: wxUser, coming: _offer.coming }}"></template>
  </view>
  <!-- End of Pay Button -->
</view>

<lottery-draw id="lottery_modal"></lottery-draw>